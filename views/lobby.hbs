<div class="container">
  <div class="block">
    <h1 class="title is-1">{{ lobbyName }}</h1>
  </div>

  <div class="block" id="lobby">
    <table class="table is-bordered is-hoverable">
      <thead>
        <tr>
          <th>Name</th>
          <th>Selected hero</th>
          <th>Played heroes</th>
          <th>Rank</th>
        </tr>
      </thead>
      <tbody>
        <tr v-for="member in members">
          <td>${member.name}</td>
          <td>${member.selected}</td>
          <td>${member.heroes}</td>
          <td>${member.rank}</td>
        </tr>
      </tbody>
    </table>


    <div v-for="hero in heroes">
      <input type="checkbox" :id=hero :value=hero v-model="wantedHeroes">
      <label :for=hero>${hero}</label>
    </div>

    <button class="button is-primary" @click="selectAll">Check all not taken</button>
    <button class="button is-info" @click="selectAll">Check all</button>
    <button class="button" @click="deselectAll">Uncheck all</button>

  </div>
</div>

<script>
  /*var socket = io.connect('http://127.0.0.1:8080');
  socket.on('connect', function(data) {

  });*/

  new Vue({
    delimiters: ['${', '}'],
    el:'#lobby',

    data: {
      members: [{name: "Karl", playedHeroes: ["D.Va", "Mercy", "Tracer"], selectedHero: "Mercy"}],
      heroes: ["Ana", "Bastion", "Brigitte", "D.Va", "Doomfist", "Genji", "Hanzo", "Junkrat", "Lúcio", "McCree", "Mei", "Mercy", "Moira", "Pharah", "Roadhog", "Soldier 76", "Sombra", "Torbjörn", "Tracer", "Widowmaker", "Winston", "Zenyatta"],
      wantedHeroes: [],
      selectedHero: ""
    },

    mounted: function() {
      var socket = io.connect('http://127.0.0.1:8080');
      socket.on('connect', function(data) {
        console.log("Connected to the server");
      });

      socket.on('connect', function(payload) {
        socket.emit('getLobbyPlayers', {{lobbyName}});
      });

      socket.on('getLobbyPlayers', function(payload) {
        members = payload;
      });

      /*socket.on('chat.'+channel, function(payload) {
        this.messages.push([channel, payload[1], payload[2]]);
      }.bind(this));*/
    },

    methods: {
      selectAll: function() {
        this.wantedHeroes = this.heroes;
      },
      deselectAll: function() {
        this.wantedHeroes = [];
      },

      /*send: function(e) {
        e.preventDefault();

        var payload = [channel, userId, this.message];
        if(this.message == '')
          this.message = null;

        if(this.message !== null)
          socket.emit('chat', payload);

        this.message = null;
      }*/
    }
  })
</script>
