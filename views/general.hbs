<div class="container">
  <div class="block">
    <h1 class="title is-1">Lobbies</h1>
  </div>

  <div class="field has-addons">
    <p class="control">
      <input class="input" placeholder="Enter lobby name" type="text">
    </p>
    <p class="control">
      <a href="" class="button is-info">Search</a>
    </p>
  </div>
  <div class="block" id="lobbies">
    <table class="table is-bordered is-hoverable">
      <thead>
        <tr>
          <th>Name</th>
          <th>Players</th>
          <th>Rank</th>
        </tr>
      </thead>
      <tbody>
        <tr v-for="lobby in lobbies" @click="join(lobby)">
          <td>${lobby.name}</td>
          <td>${lobby.players}/6</td>
          <td>${lobby.rank}</td>
        </tr>
      </tbody>
    </table>
  </div>


  <div class="block">
    <h1 class="title is-5">Create new lobby</h1>
  </div>

  <div class="block" id="create">
    <form method="get" action="lobby">
      <div class="field">
        <label class="label">Name</label>
        <input :class="classe" placeholder="Enter Name" type="text" @keyup="checkLobbyExists" v-model="name">
      </div>

      <input type="submit" class="button is-primary" value="Create">

    </form>
  </div>
</div>

<script>
  var socket = io.connect('http://127.0.0.1:8080');
  socket.on('connect', function(data) {
    console.log("Connected to the server");
  });

  new Vue({
    delimiters: ['${', '}'],
    el:'#lobbies',

    data: {
      lobbies: [{id:420, name: "myname", players: "mesplayers", rank: "monRank"}]
    },

    methods: {
      join: function(lobby) {

      }
    },

  })
  new Vue({
    delimiters: ['${', '}'],
    el:'#create',

    data: {
      name: "",
      classe: "input"
    },

    mounted: function() {
      socket.on('connect', function() {
        //socket.emit('join', [channel, userId, userName]);
        //console.log('Connected to server.');
      });

      socket.on('checkLobbyExists', function(payload) { // le serveur renvoie true si le nom existe déjà
        if(this.name == '' || this.name == null) {
          this.classe = "input";
        }
        // 0: empty, 1: ok, 2: error
        if(payload)
          this.classe = "input is-danger";
        else
          this.classe = "input is-success";
      }.bind(this));
    },


    methods: {
      checkLobbyExists: function(e) {
        var payload = this.name;
        if(this.name == '')
          this.name = null;

        if(this.name !== null) {
          socket.emit('checkLobbyExists', payload);
        }
      },
    }
  })

</script>
